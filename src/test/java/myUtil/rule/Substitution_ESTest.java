package myUtil.rule;/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 08 02:33:06 GMT 2018
 */


import org.junit.Test;

import java.util.LinkedList;

import static org.junit.Assert.*;

public class Substitution_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      LinkedList<Substitution> linkedList1 = substitution0.extendAll(linkedList0);
      Predicate predicate0 = new Predicate("0'F\"u>|[B(c;2");
      Argument[] argumentArray0 = new Argument[3];
      Value value0 = new Value("");
      Argument argument0 = Argument.value(value0);
      argumentArray0[0] = argument0;
      Argument argument1 = Argument.value(value0);
      argumentArray0[1] = argument1;
      Argument argument2 = Argument.value(value0);
      argumentArray0[2] = argument2;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Fact fact0 = datalog0.toFact();
      Substitution substitution1 = datalog0.substituteTo(fact0);
      linkedList1.push(substitution1);
      linkedList1.add(substitution0);
      LinkedList<Substitution> linkedList2 = substitution0.extendAll(linkedList1);
      substitution0.extendAll(linkedList2);
      Datalog datalog1 = null;
      // Undeclared exception!
      try { 
        substitution0.applyOn((Datalog) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Predicate predicate0 = new Predicate("nQ6$5(G6-QH");
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      linkedList0.add(substitution0);
      substitution0.extendAll(linkedList0);
      Argument[] argumentArray0 = new Argument[2];
      Variable variable0 = new Variable("nQ6$5(G6-QH");
      Argument argument0 = Argument.variable(variable0);
      argumentArray0[0] = argument0;
      argument0.getValue();
      substitution0.extend(variable0, (Value) null);
      argument0.getValue();
      Argument argument1 = Argument.value((Value) null);
      argumentArray0[1] = argument1;
      // Undeclared exception!
      try { 
        argument1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Variable variable0 = new Variable("220( m_~??");
      Value value0 = new Value("1aVEzb:1n,FF:");
      Substitution substitution1 = substitution0.extend(variable0, value0);
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      LinkedList<Substitution> linkedList1 = substitution0.extendAll(linkedList0);
      LinkedList<Substitution> linkedList2 = substitution1.extendAll(linkedList1);
      linkedList2.add(substitution1);
//      LinkedList<Substitution> linkedList3 = substitution1.extendAll(linkedList2);
//    substitution1.extendAll(linkedList3);
      substitution1.extend(variable0, value0);
      String string0 = "^/<v1s<";
      Variable variable1 = new Variable(string0);
      Argument argument0 = Argument.variable(variable1);
      Value value1 = argument0.getValue();
      substitution0.extend(variable0, value1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Predicate predicate0 = new Predicate("Predicate cannot be null");
      Argument[] argumentArray0 = new Argument[5];
      Variable variable0 = new Variable("Predicate cannot be null");
      Argument argument0 = Argument.variable(variable0);
      argument0.getValue();
      argument0.toString();
      Argument argument1 = Argument.value((Value) null);
      argumentArray0[0] = argument1;
      Argument argument2 = Argument.value((Value) null);
      argumentArray0[1] = argument2;
      Argument argument3 = Argument.value((Value) null);
      argumentArray0[2] = argument3;
      Argument argument4 = Argument.variable(variable0);
      argumentArray0[3] = argument4;
      Argument argument5 = Argument.value((Value) null);
      argument4.toString();
      argumentArray0[4] = argument5;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      substitution0.applyOn(datalog0);
      Variable variable1 = new Variable("");
      substitution0.extend(variable1, (Value) null);
      // Undeclared exception!
      try { 
        substitution0.extend(variable1, (Value) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Variable variable0 = new Variable("");
      Value value0 = new Value("");
      Argument argument0 = Argument.value(value0);
      variable0.toString();
      argument0.toString();
      Value value1 = argument0.getValue();
      Substitution substitution1 = substitution0.extend(variable0, value1);
      Predicate predicate0 = new Predicate("");
      Argument[] argumentArray0 = new Argument[6];
      argumentArray0[0] = argument0;
      argumentArray0[1] = argument0;
      argumentArray0[2] = argument0;
      argumentArray0[3] = argument0;
      argumentArray0[4] = argument0;
      argumentArray0[5] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      datalog0.toString();
      Fact fact0 = datalog0.toFact();
      Argument.variable(variable0);
      datalog0.toString();
      datalog0.compatibleWith(fact0);
      substitution1.applyOn(datalog0);
      substitution1.applyOn(datalog0);
      // Undeclared exception!
      try { 
        substitution1.extendAll((LinkedList<Substitution>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      linkedList0.add(substitution0);
      // Undeclared exception!
      try { 
        substitution0.applyOn((Datalog) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Predicate predicate0 = new Predicate("z'Q,*a7o)bd");
      Argument[] argumentArray0 = new Argument[2];
      Value value0 = new Value("z'Q,*a7o)bd");
      Argument argument0 = Argument.value(value0);
      argument0.getVariable();
      Argument argument1 = Argument.variable((Variable) null);
      argumentArray0[0] = argument1;
      Argument argument2 = Argument.value(value0);
      argumentArray0[1] = argument2;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Datalog datalog1 = substitution0.applyOn(datalog0);
      assertTrue(datalog1.equals((Object)datalog0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Value value0 = new Value(",x8NJOU{<?#]qq69");
      Substitution substitution1 = substitution0.extend((Variable) null, value0);
      Predicate predicate0 = new Predicate(",x8NJOU{<?#]qq69");
      Argument[] argumentArray0 = new Argument[1];
      Argument argument0 = Argument.variable((Variable) null);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Datalog datalog1 = substitution1.applyOn(datalog0);
      Datalog datalog2 = substitution1.applyOn(datalog1);
      assertNotSame(substitution1, substitution0);
      assertFalse(datalog2.equals((Object)datalog0));
      assertTrue(datalog2.equals((Object)datalog1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Predicate predicate0 = new Predicate("I;5V<QwBkcr8");
      Argument[] argumentArray0 = new Argument[6];
      Variable variable0 = new Variable("I;5V<QwBkcr8");
      Argument argument0 = Argument.variable(variable0);
      argumentArray0[0] = argument0;
      Argument argument1 = Argument.variable(variable0);
      argumentArray0[1] = argument1;
      Argument argument2 = Argument.variable(variable0);
      argumentArray0[2] = argument2;
      argument1.getValue();
      Argument argument3 = Argument.value((Value) null);
      argumentArray0[3] = argument3;
      Argument argument4 = Argument.variable(variable0);
      argumentArray0[4] = argument4;
      Predicate predicate1 = new Predicate("");
      Datalog datalog0 = new Datalog(predicate1, argumentArray0);
      // Undeclared exception!
      try { 
        substitution0.applyOn(datalog0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      substitution0.extendAll(linkedList0);
      LinkedList<Substitution> linkedList1 = substitution0.extendAll(linkedList0);
      Variable variable0 = new Variable("Argument");
      Argument argument0 = Argument.variable(variable0);
      Variable variable1 = argument0.getVariable();
      Value value0 = new Value("Value");
      Value value1 = new Value("value1");

      Substitution substitution_my = new Substitution();
      substitution_my.extend(variable1, value0);
      Substitution substitution2 = substitution0.extend(variable1, value1);
      linkedList1.add(substitution2);
      substitution_my.extendAll(linkedList1);

      Substitution substitution4 = new Substitution();
      LinkedList<Substitution> linkedList2 = substitution4.extendAll(linkedList1);
      Substitution substitution3 = substitution2.extend(variable1, value0);
      Predicate predicate0 = new Predicate("c:@w#cr<}IoO");
      Argument[] argumentArray0 = new Argument[2];
      argumentArray0[0] = argument0;
      argumentArray0[1] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      datalog0.toFact();
      substitution_my.applyOn(datalog0);

      argument0.getValue();
      substitution2.extend(variable0, (Value) null);
      //substitution4.extendAll(linkedList1);
      //System.out.println(linkedList1.size());
      //substitution4.extendAll(linkedList2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Argument[] argumentArray0 = new Argument[5];
      Value value0 = new Value("zi)QR7gl44fva84cs@");
      Argument argument0 = Argument.value(value0);
      argumentArray0[0] = argument0;
      Variable variable0 = new Variable("zi)QR7gl44fva84cs@");
      Argument argument1 = Argument.variable(variable0);
      argumentArray0[1] = argument1;
      Argument argument2 = Argument.value(value0);
      argumentArray0[2] = argument2;
      Argument argument3 = Argument.value(value0);
      argumentArray0[3] = argument3;
      argumentArray0[4] = argument1;
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      Variable variable0 = new Variable("H5R^-6q7}$1Fkb1%");
      Value value0 = new Value("H5R^-6q7}$1Fkb1%");
      Substitution substitution1 = substitution0.extend(variable0, value0);
      assertNotSame(substitution1, substitution0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      LinkedList<Substitution> linkedList1 = substitution0.extendAll(linkedList0);
      Argument[] argumentArray0 = new Argument[3];
      Value value0 = new Value("");
      Argument argument0 = Argument.value(value0);
      argumentArray0[0] = argument0;
      Argument argument1 = Argument.value(value0);
      argumentArray0[1] = argument1;
      Argument argument2 = Argument.value(value0);
      argumentArray0[2] = argument2;
      linkedList1.add(substitution0);
      LinkedList<Substitution> linkedList2 = substitution0.extendAll(linkedList1);
      substitution0.extendAll(linkedList2);
      Datalog datalog0 = null;
      // Undeclared exception!
      try { 
        substitution0.applyOn((Datalog) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Substitution substitution0 = new Substitution();
      LinkedList<Substitution> linkedList0 = new LinkedList<Substitution>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.toArray();
      linkedList0.containsAll(linkedList1);
      LinkedList<Substitution> linkedList2 = substitution0.extendAll(linkedList0);
      assertNotSame(linkedList2, linkedList0);
  }
}
