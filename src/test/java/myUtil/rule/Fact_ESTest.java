package myUtil.rule;/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 08 02:36:54 GMT 2018
 */


import org.junit.Test;

import static org.junit.Assert.*;

public class Fact_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Predicate predicate0 = new Predicate(")");
      Value[] valueArray0 = new Value[0];
      Fact fact0 = new Fact(predicate0, valueArray0);
      Value[] valueArray1 = fact0.getValues();
      assertSame(valueArray1, valueArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Predicate predicate0 = new Predicate(")");
      Value[] valueArray0 = new Value[0];
      Fact fact0 = new Fact(predicate0, valueArray0);
      String string0 = fact0.toString();
      assertEquals(")()", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Value value0 = new Value("Pr;)dcate cot be ll");
      valueArray0[0] = value0;
      Fact fact0 = new Fact(predicate0, valueArray0);
      // Undeclared exception!
      try { 
        fact0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Value value0 = new Value("Pr;)dcate cot be ll");
      valueArray0[0] = value0;
      Fact fact0 = new Fact(predicate0, valueArray0);
      Value[] valueArray1 = new Value[2];
      Fact fact1 = new Fact(predicate0, valueArray1);
      boolean boolean0 = fact0.equals(fact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Predicate predicate0 = new Predicate("|o");
      Value[] valueArray0 = new Value[1];
      Fact fact0 = new Fact(predicate0, valueArray0);
      Predicate predicate1 = new Predicate("|o(|o)");
      Fact fact1 = new Fact(predicate1, valueArray0);
      boolean boolean0 = fact0.equals(fact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Fact fact0 = new Fact(predicate0, valueArray0);
      boolean boolean0 = fact0.equals(fact0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Fact fact0 = new Fact(predicate0, valueArray0);
      boolean boolean0 = fact0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Value value0 = new Value("Pr;)dcate cot be ll");
      Fact fact0 = new Fact(predicate0, valueArray0);
      boolean boolean0 = fact0.equals(value0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Predicate predicate0 = new Predicate("T-ztpHfw$v*4D/");
      Fact fact0 = null;
      try {
        fact0 = new Fact(predicate0, (Value[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Values cannot be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Value[] valueArray0 = new Value[10];
      Fact fact0 = null;
      try {
        fact0 = new Fact((Predicate) null, valueArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Predicate cannot be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Fact fact0 = new Fact(predicate0, valueArray0);
      fact0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Fact fact0 = new Fact(predicate0, valueArray0);
      Value[] valueArray1 = fact0.getValues();
      assertEquals(2, valueArray1.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Predicate predicate0 = new Predicate("Pr;)dcate cot be ll");
      Value[] valueArray0 = new Value[2];
      Fact fact0 = new Fact(predicate0, valueArray0);
      Predicate predicate1 = fact0.getPredicate();
      assertEquals("Pr;)dcate cot be ll", predicate1.getName());
  }
}
