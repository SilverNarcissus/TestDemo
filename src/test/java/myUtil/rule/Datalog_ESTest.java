package myUtil.rule;/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 08 02:30:16 GMT 2018
 */


import org.junit.Test;

import static org.junit.Assert.*;

public class Datalog_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Predicate predicate0 = new Predicate("(");
      Argument[] argumentArray0 = new Argument[1];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Value[] valueArray0 = new Value[6];
      Fact fact0 = new Fact(predicate0, valueArray0);
      Substitution substitution0 = datalog0.substituteTo(fact0);
      assertNull(substitution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Predicate predicate0 = new Predicate("@PTOl:+MK");
      Argument[] argumentArray0 = new Argument[0];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Argument[] argumentArray1 = datalog0.getArguments();
      assertSame(argumentArray1, argumentArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Predicate predicate0 = new Predicate("8c-T4Dby(bRkSUCN:");
      Argument[] argumentArray0 = new Argument[4];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      // Undeclared exception!
      try { 
        datalog0.toFact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Predicate predicate0 = new Predicate("X!:Ns[n3& =qX w:@");
      Argument[] argumentArray0 = new Argument[8];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      // Undeclared exception!
      try { 
        datalog0.compatibleWith((Fact) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Predicate predicate0 = new Predicate("dKmlg>_dw*.C");
      Argument[] argumentArray0 = new Argument[7];
      Value value0 = new Value("dKmlg>_dw*.C");
      Argument argument0 = Argument.variable((Variable) null);
      argumentArray0[0] = argument0;
      argumentArray0[1] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Value[] valueArray0 = new Value[7];
      valueArray0[0] = value0;
      Fact fact0 = new Fact(predicate0, valueArray0);
      Substitution substitution0 = datalog0.substituteTo(fact0);
      assertNull(substitution0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Predicate predicate0 = new Predicate("ZrN/rsW");
      Argument[] argumentArray0 = new Argument[7];
      Value value0 = new Value("ZrN/rsW");
      Argument argument0 = Argument.variable((Variable) null);
      argumentArray0[0] = argument0;
      Argument argument1 = Argument.value(value0);
      argumentArray0[1] = argument1;
      argumentArray0[2] = argument1;
      Argument argument2 = Argument.value((Value) null);
      argumentArray0[3] = argument2;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Value[] valueArray0 = new Value[7];
      valueArray0[1] = value0;
      valueArray0[2] = value0;
      valueArray0[3] = value0;
      Fact fact0 = new Fact(predicate0, valueArray0);
      Substitution substitution0 = datalog0.substituteTo(fact0);
      assertNull(substitution0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Predicate predicate0 = new Predicate("dKmlg>_dw*.C");
      Argument[] argumentArray0 = new Argument[7];
      Argument argument0 = Argument.variable((Variable) null);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Value[] valueArray0 = new Value[7];
      Fact fact0 = new Fact(predicate0, valueArray0);
      // Undeclared exception!
      try { 
        datalog0.substituteTo(fact0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(8bwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Value value0 = new Value("(");
      Argument argument0 = Argument.value(value0);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Fact fact0 = datalog0.toFact();
      Substitution substitution0 = datalog0.substituteTo(fact0);
      assertNotNull(substitution0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Predicate predicate0 = new Predicate("ta^(");
      Argument[] argumentArray0 = new Argument[2];
      Variable variable0 = new Variable("ta^(");
      Argument argument0 = Argument.variable(variable0);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      // Undeclared exception!
      try { 
        datalog0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Predicate predicate0 = new Predicate("HHG:_|[c-s,5hZ!6J");
      Argument[] argumentArray0 = new Argument[0];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      String string0 = datalog0.toString();
      assertEquals("HHG:_|[c-s,5hZ!6J()", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Predicate predicate0 = new Predicate("ta^(");
      Argument[] argumentArray0 = new Argument[2];
      Variable variable0 = new Variable("ta^(");
      Argument argument0 = Argument.variable(variable0);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Fact fact0 = datalog0.toFact();
      assertNull(fact0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Predicate predicate0 = new Predicate("ZrN/rsW");
      Argument[] argumentArray0 = new Argument[7];
      Value value0 = new Value("ZrN/rsW");
      Argument argument0 = Argument.variable((Variable) null);
      argumentArray0[0] = argument0;
      Argument argument1 = Argument.value(value0);
      argumentArray0[1] = argument1;
      argumentArray0[2] = argumentArray0[1];
      Argument argument2 = Argument.value((Value) null);
      argumentArray0[3] = argument2;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Value[] valueArray0 = new Value[7];
      valueArray0[1] = value0;
      valueArray0[2] = value0;
      valueArray0[3] = value0;
      Fact fact0 = new Fact(predicate0, valueArray0);
      boolean boolean0 = datalog0.compatibleWith(fact0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Predicate predicate0 = new Predicate("Value cannot be null");
      Argument[] argumentArray0 = new Argument[16];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Value[] valueArray0 = new Value[6];
      Fact fact0 = new Fact(predicate0, valueArray0);
      Substitution substitution0 = datalog0.substituteTo(fact0);
      assertNull(substitution0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Value value0 = new Value("%T`VV.<+o(Pbwk_3");
      Argument argument0 = Argument.value(value0);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Fact fact0 = datalog0.toFact();
      Predicate predicate1 = new Predicate("");
      Datalog datalog1 = new Datalog(predicate1, argumentArray0);
      Substitution substitution0 = datalog1.substituteTo(fact0);
      assertNull(substitution0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Value value0 = new Value("%T`VV.<+o(Pbwk_3");
      Argument argument0 = Argument.value(value0);
      argumentArray0[0] = argument0;
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Fact fact0 = datalog0.toFact();
      assertNotNull(fact0);
      
      boolean boolean0 = datalog0.compatibleWith(fact0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Predicate predicate0 = new Predicate("Value cannot be null");
      Argument[] argumentArray0 = new Argument[16];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Argument[] argumentArray1 = new Argument[4];
      Datalog datalog1 = new Datalog(predicate0, argumentArray1);
      boolean boolean0 = datalog0.equals(datalog1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Predicate predicate1 = new Predicate("");
      Datalog datalog1 = new Datalog(predicate1, argumentArray0);
      boolean boolean0 = datalog0.equals(datalog1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      boolean boolean0 = datalog0.equals(datalog0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Predicate predicate0 = new Predicate("ta^(");
      Argument[] argumentArray0 = new Argument[2];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      boolean boolean0 = datalog0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Value value0 = new Value("%T`VV.<+o(Pbwk_3");
      Argument argument0 = Argument.value(value0);
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      boolean boolean0 = datalog0.equals(argument0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Predicate predicate0 = new Predicate(",");
      Datalog datalog0 = null;
      try {
        datalog0 = new Datalog(predicate0, (Argument[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Arguments cannot be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Argument[] argumentArray0 = new Argument[4];
      Datalog datalog0 = null;
      try {
        datalog0 = new Datalog((Predicate) null, argumentArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Predicate cannot be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      datalog0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Predicate predicate0 = new Predicate("?5D^Djj4[[)");
      Argument[] argumentArray0 = new Argument[5];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Argument[] argumentArray1 = datalog0.getArguments();
      assertSame(argumentArray0, argumentArray1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Predicate predicate0 = new Predicate("%T`VV.<+o(Pbwk_3");
      Argument[] argumentArray0 = new Argument[1];
      Datalog datalog0 = new Datalog(predicate0, argumentArray0);
      Predicate predicate1 = datalog0.getPredicate();
      assertEquals("%T`VV.<+o(Pbwk_3", predicate1.getName());
  }
}
