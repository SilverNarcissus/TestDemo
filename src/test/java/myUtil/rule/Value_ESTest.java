package myUtil.rule;/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 08 02:39:07 GMT 2018
 */


import org.junit.Test;

import static org.junit.Assert.*;

public class Value_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Value value0 = new Value("");
      String string0 = value0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Value value0 = new Value("");
      String string0 = value0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Value value0 = new Value("");
      boolean boolean0 = value0.equals(value0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Value value0 = new Value("XfSi&!EXCR/>+");
      boolean boolean0 = value0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Value value0 = new Value("XfSi&!EXCR/>+");
      boolean boolean0 = value0.equals("XfSi&!EXCR/>+");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Value value0 = null;
      try {
        value0 = new Value((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Value cannot be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Value value0 = new Value("XfSi&!EXCR/>+");
      String string0 = value0.toString();
      assertEquals("XfSi&!EXCR/>+", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Value value0 = new Value("XfSi&!EXCR/>+");
      String string0 = value0.getValue();
      assertEquals("XfSi&!EXCR/>+", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Value value0 = new Value("XfSi&!EXCR/>+");
      value0.hashCode();
  }
}
